# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= Rails.env.development? ? 'postgres' : ENV.fetch("DB_USERNAME", "postgres") %>
  password: <%= Rails.env.development? ? 'postgres' : ENV.fetch("DB_PASSWORD", "postgres") %>
  host: <%= Rails.env.development? ? 'localhost' : ENV.fetch("DB_HOST", "localhost") %>
  port: <%= Rails.env.development? ? 5432 : ENV.fetch("DB_PORT", 5432) %>

development:
  <<: *default
  database: cmt_development
  username: postgres
  password: postgres
  host: localhost
  port: 5432

test:
  <<: *default
  database: cmt_test


staging:
  primary: &primary_staging
    <<: *default
    database: <%= ENV['DB_NAME'] || Rails.application.credentials.dig(:database, :name)  %>
    username: <%= ENV['DB_USERNAME'] || Rails.application.credentials.dig(:database, :username) %>
    password: <%= ENV['DB_PASSWORD'] || Rails.application.credentials.dig(:database, :password) %>
    host: <%= ENV['DB_HOST'] || Rails.application.credentials.dig(:database, :host) %>
    port: <%= ENV['DB_PORT'] || Rails.application.credentials.dig(:database, :port) %>
  cache:
    <<: *primary_staging
    database: cmt_staging_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_staging
    database: cmt_staging_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_staging
    database: cmt_staging_cable
    migrations_paths: db/cable_migrate


# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  primary: &primary_production
    <<: *default
    url: <%= ENV['DATABASE_URL'] %>
